version: "3.8"

services:
  app_blue:
    image: "${BLUE_IMAGE}"
    env_file: .env
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT}
    ports:
      - "${BLUE_DIRECT_PORT}:${PORT}"
    restart: unless-stopped

  app_green:
    image: "${GREEN_IMAGE}"
    env_file: .env
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT}
    ports:
      - "${GREEN_DIRECT_PORT}:${PORT}"
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    env_file: .env
    depends_on:
      - app_blue
      - app_green
    ports:
      - "${NGINX_PUBLIC_PORT}:80"
    volumes:
      - ./nginx/nginx.template.conf:/etc/nginx/nginx.template.conf:ro
      - ./nginx/entrypoint.sh:/docker-entrypoint.d/entrypoint.sh:ro
      - nginx_logs:/var/log/nginx     # shared log volume
    command: ["sh", "-c", "chmod +x /docker-entrypoint.d/entrypoint.sh && /docker-entrypoint.d/entrypoint.sh"]
    restart: unless-stopped

  alert_watcher:
    image: python:3.11-slim
    env_file: .env
    volumes:
      - ./watcher:/app:ro
      - nginx_logs:/var/log/nginx:ro
    working_dir: /app
    command: ["sh", "-c", "pip install -r requirements.txt && python watcher.py"]
    restart: unless-stopped

volumes:
  nginx_logs:
